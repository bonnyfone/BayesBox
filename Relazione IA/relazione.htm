<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html> 
 
<head> 
<title> BayesBox - Progetto di Intelligenza Artificiale - 2010/2011 - S. Bonetta </title> 
</head> 
 
<body> 
 
<h1 style="text-align: center"> BayesBox </h1> 
<p style="text-align: center; font-style: italic;
normal;"> Stefano Bonetta - progetto per il corso di Intelligenza Artificiale A.A. 2010/2011 </p> 
<br><h2> Introduzione </h2> 
Scopo del progetto e' la realizzazione di una libreria JAVA per la manipolazione di <b>reti di Bayes</b> che permetta di effettuare operazioni di <b>inferenza</b> attraverso metodi esatti o tramite tecniche di simulazione stocastica.<br>
La libreria fornisce inoltre la possibilita' di importare ed utilizzare delle reti di bayes in formato XML, come quelle realizzate tramite il 
programma grafico <a href='http://www.snn.ru.nl/nijmegen/index.php?option=com_content&view=article&id=89&Itemid=212'>BayesBuilder</a>.

<br><br><h2> Elenco delle funzionalita' </h2> 
<ol>
<li>Manipolazione di reti di Bayes via codice</li>
<li>Caricamento di reti da file XML</li>
<li>Calcolo di un ordinamento topologico della rete</li>
<li>Generazione di campioni consistenti semplici</li>
<li>Generazione di campioni consistenti pesati</li>
<li>Inferenza esatta tramite <font color='blue'><b>Enumerazione</b></b></font></li>
<li>Inferenza tramite simulazione stocastica <font color='blue'><b>Rejction Sampling</b></font></li>
<li>Inferenza tramite simulazione stocastica <font color='blue'><b>Likelihood Weighting</b></font></li>
</ol>
<i>In fase iniziale era stato preso in considerazione anche l'algoritmo di inferenza esatta tramite Eliminazione di variabile, ma per motivi di tempo 
e complessita' non e' stato possibile implementarlo.</i>

<br><br><h2>Utilizzo della libreria</h2>
Per utilizzare la libreria all'interno dei propri progetti JAVA e' sufficiente aggiungere al build-path del proprio progetto il 
file <font color='green'><b>BayesBox.jar</b></font>, ed importare le classi che si desidera utilizzare.

<br><br><h3>Creazione ed utilizzo di una rete hard-coded</h3>
Con poche righe di codice e' possibile creare da zero una nuova rete impostando nodi, dipendenze e probabilita per andare poi ad eseguire uno degli 
algoritmi di inferenza disponibili. Vediamo un esempio: <br>

<table border=0>
<tr><td width='50%'>
<p style="padding: 5px; background-color: #FEFF90; margin-left : 2em; color : blue;">
<code>
import bayesbox.logic.BayesNet;<br>
import bayesbox.logic.BayesNetNode;<br>
import bayesbox.input.BayesBoxIOExc;<br>
...<br>
...<br>

		<font color='green'>//definisco i nodi</font><br>
		BayesNetNode root1 = new BayesNetNode("event 1", "description of event 1");<br>
		BayesNetNode root2 = new BayesNetNode("event 2", "description of event 2");<br>
		BayesNetNode child = new BayesNetNode("child");<br><br>

		<font color='green'>//imposto dipendenze e probabilita'</font><br>		
		root1.setProbability(true, 0.4);<br>
		root2.setProbability(true, 0.8);<br><br>
		child.influencedBy(root1,root2);<br>
		child.setProbability(0.3, true,true);<br>
		child.setProbability(0.4, true,false);<br>
		child.setProbability(0.5, false,true);<br>
		child.setProbability(0.6, false,false);<br><br>
		
		<font color='green'>//creo la rete, passando i nodi radice</font><br>
		BayesNet bn = new BayesNet(root1,root2);<br><br>
		
		<font color='green'>//calcolo inferenza esatta tramite metodo di enumerazione senza evidenza</font><br>
		double ris[] = bn.enumerationAsk("child", null, BayesNet.MODE_ID);<br>
...<br>
...<br>
</code>
</p></td><td><center>Il codice a fianco crea una rete come la seguente:<br><br><img src='images/esempio.png'></center></td></tr></table>

<br><h3>Creazione ed importazione di una rete in formato XML</h3>
Come detto in precedenza e' possibile realizzare delle reti tramite il tool grafico BayesBox ed esportarle in formato XML, 
per poterle poi importare ed utilizzare tramite la libreria. Supponiamo di aver creato con il tool la rete precedente:<br><br>

<center><img src ='images/builder.png'><br><br></center>

A questo punto possiamo importare la rete direttamente nel programma attraverso poche istruzioni. <br><i>NB:Una volta importata la rete puo' essere 
manipolata come una qualsiasi rete creata via codice.</i><br>

<table border=0>
<tr><td width='50%'>
<p style="padding: 5px; background-color: #FEFF90; margin-left : 2em; color : blue;">
<code>
import bayesbox.input.BayesBox;<br>
import bayesbox.input.BayesBoxIOExc;<br>
import bayesbox.logic.BayesNet;<br>
import bayesbox.logic.BayesNetNode;<br>
...<br>
...<br>
		<font color='green'>//Importo la rete</font><br>
		BayesBox box = new BayesBox("/home/test_bayes/example.xml");<br>
		BayesNet bn = box.getBayesNet();<br><br>
		
		
		
		<font color='green'>//calcolo inferenza esatta tramite metodo di enumerazione senza evidenza</font><br>
		double ris[] = bn.enumerationAsk("child", null, BayesNet.MODE_ID);<br>
...<br>
...<br>
</code>
</p></td><td><center> </td></tr></table>

<br><h3>Alcune note di utilizzo importanti</h3>
<ul>

<li>In caso di errori la libreria solleva delle particolari eccezioni (BayesBoxIOExc) che spiegano la tipologia di problema, a partire da errori 
di lettura dei file XML fino al passaggio di variabili di evidenza sconosciute ai metodi di inferenza.</li> 
<li>E' possibile monitorare lo stato delle 
operazioni che la libreria sta eseguento attivando la modalita' verbose, che inviera' dei log in tempo reale sulla shell; diversamente la libreria 
lavorera' in modalita' silente (per attivare la modalita' verbosa: <code>BayesBox.setVerboseMode(true)</code> ).</li>
<li>Per costruire dell'<i>evidenza</i> da passare ai metodi di inferenza e' sufficiente creare una Hashtable del tipo <i>variabile->valore booleano</i>
 che rappresenta lo stato delle variabili di evidenza. Ad esempio: <table border=0>
<tr><td width='50%'>
<p style="padding: 5px; background-color: #FEFF90; margin-left : 2em; color : blue;">
<code>
...<br>
...<br>
		<font color='green'>//Creo l'hashtable </font><br>
		Hashtable<String, Boolean> evidence = new Hashtable<String, Boolean>();<br>
		evidence.put("event 1", true);<br>
		evidence.put("event 2", true);<br><br>
		
		<font color='green'>//calcolo inferenza esatta tramite metodo di enumerazione con evidenza</font><br>
		double ris[] = bn.enumerationAsk("child", evidence, BayesNet.MODE_ID);<br>
...<br>
...<br>
</code>
</p></td><td><center> </td></tr></table>


</ul>

<br><h3>Dettagli implementativi</h3>................
  
<br><h3>Documentazione</h3>
La documentazione dettagliata della libreria e' disponibile in formato JavaDoc (<a href='javadoc/index.html'>BayesBox Documentation</a>).
  
<br><br><h2>Testing</h2>
La fase di testing si e' incentrata sulla verifica della correttezza dei risultati dell'inferenza e sulla convergenza dei metodi stocastici. 
Nel dattaglio sono state analizzate le prestazioni di tutti i metodi su diverse tipologie di reti (ad esempio: polytree e 3SAT). Come vedremo, i risultati ottenuti rispecchiano le proprieta' teoriche delle reti bayesiane. Tutti i test sono stati eseguiti su una macchina operante con 
Ubuntu 9.10 a 64 bit - 2GB RAM - processore AMD Turion64 X2 a 2Ghz.

<br><br><h3>Convergenza di Rejection Sampling e Likelihood Weighting</h3>
Per quanto riguarda le tecniche di inferenza tramite simulazione stocastica si e' verificato che sia l'algoritmo <b>Rejection Sampling</b> sia 
l'algoritmo <b>Likelihood Weighting</b> convergono all'inferenza esatta all'aumentare del <i>numero di campioni</i> utilizzati. Ognuno dei test su 
n-campioni e' stato eseguito 100 volte, pertanto il valore dell'errore rilevato e' la media dei risultati dei test per quel numero di nodi.
<br><br><img src='images/testconvergenza2.png'>
<br><br><img src='images/testconvergenza1.png'>
<br>Come si puo' vedere dai due grafi, nel caso in cui sia presente dell'evidenza l'algoritmo Likelihood Weighting converge piu' velocemente al valore 
esatto. In assenza di evidenza, i due algoritmi sono sostanzialmente identici.

<br><br><h3>Prestazioni degli algoritmi</h3>
Sono stati messi a confronto i tre algoritmi per verificarne le prestazioni su varie tipologie di reti.
Utilizzando una rete <b>polytree</b> si e' visto come l'algoritmo di Enumerazione riesca a dare risultati esatti in tempo competitivo rispetto agli algoritmi di inferenza approssimata che sono stati eseguiti usando 1000 campioni:<br>
<img src='images/test3.png'>
<br><br><br>Considerando invece delle reti di tipo <b>3SAT</b>, l'algoritmo di Enumerazione risente della struttura connessa della rete mentre i metodi 
stocastici non sembrano accusare l'incremento di complessita'. Ad ogni modo, essendo eseguiti sempre con un insieme di 1000 campioni, gli algoritmi 
approssimati commettono un errore maggiore, che puo' essere attenuato aumentando il numero di campioni:<br><br>
<img src='images/test1.png'>
<br><br><br>L'algoritmo di Enumerazione degrada <b>esponenzialmente</b> in presenza di reti di media grandezza di tipo 3SAT, tant'e' che si rende necessaria 
una scala logaritmica per rappresentare i risultati. NB: l'enumerazione ha impiegato circa 10 minuti per terminare!<br><br>
<img src='images/test2.png'>
<br><br>Sono stati fatti dei test anche su reti di dimensioni maggiori (3SAT con 55 nodi), dove l'algoritmo di Enumerazione non e' riuscito a portare 
a termine il calcolo nemmeno dopo 7 ore di computazione. Gli algoritmi di inferenza stocastica invece permettono di arrivare sempre ad un risultato in un tempo accettabile e con una precisione modulabile tramite il numero di campioni utilizzati.

<br><br><h2>Consuntivo </h2>
<table border=1>
<tr><th>Attivita'</th><th>Ore</th></tr>
<tr><td>Raccolta informazioni</td><td align='right'>4</td>
<tr><td>Progettazione</td><td align='right'>6</td>
<tr><td>Implementazione</td><td align='right'>17</td>
<tr><td>Verifica e testing</td><td align='right'>7</td>
<tr><td align='right'><b>totale</b></td><td align='right'><b>34</b></td></tr></table>

<br><h2>Riferimenti </h2>

<ul><li><a href='http://code.google.com/p/aima-java/'>AIMA Code</a> Java implementation of algorithms from Norvig And Russell's "Artificial Intelligence - A Modern Approach 3rd Edition."</li>
<li>Lucidi del corso di Intelligenza Artificiale, <a href='http://www.math.unipd.it/~sperduti/AI11/incertezza.pdf'>gestione dell'Incertezza</a></li>
</ul><br>

</body>
</html>
